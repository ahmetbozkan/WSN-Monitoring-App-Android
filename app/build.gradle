plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    compileSdk versionBuild.compileSdkVersion

    defaultConfig {
        applicationId "com.intalalab.wsnmonitoring"
        minSdk versionBuild.minSdkVersion
        targetSdk versionBuild.targetSdkVersion
        versionCode generateVersionCode()
        versionName generateVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "BASE_URL_LOGIN", base_url_login)
        buildConfigField("String", "BASE_URL_WSN", base_url_wsn)
        buildConfigField("String", "BASE_URL_COORDINATOR", base_url_coordinator)
        buildConfigField("String", "BASE_URL_ROUTER", base_url_router)
        buildConfigField("String", "BASE_URL_SENSOR", base_url_sensor)
        buildConfigField("String", "BASE_URL_SENSOR_DATA", base_url_sensor_data)
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

}


dependencies {
    // navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$library.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$library.navigation"

    // dagger - hilt
    implementation "com.google.dagger:hilt-android:$library.dagger_hilt"
    kapt "com.google.dagger:hilt-compiler:$library.dagger_hilt"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$library.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$library.lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$library.lifecycle"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$library.coroutines"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$library.retrofit"

    // Gson converter
    implementation "com.squareup.retrofit2:converter-gson:$library.retrofit"

    // okhttp
    implementation "com.squareup.okhttp3:okhttp:$library.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$library.okhttp"

    // glide
    implementation "com.github.bumptech.glide:glide:$library.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$library.glide"

    // chucker
    debugImplementation "com.github.chuckerteam.chucker:library:$library.chucker"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$library.chucker"

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'cn.pedant.sweetalert:library:1.3'

    implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    implementation "androidx.core:core-ktx:$library.core"
    implementation "androidx.appcompat:appcompat:$library.appcompat"
    implementation "com.google.android.material:material:$library.material"
    implementation "androidx.constraintlayout:constraintlayout:$library.constraintlayout"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

private Integer generateVersionCode() {
    return appVersion.major * 10000 + appVersion.minor * 100 + appVersion.patch
}

private String generateVersionName() {
    return "${appVersion.major}.${appVersion.minor}.${appVersion.patch}"
}